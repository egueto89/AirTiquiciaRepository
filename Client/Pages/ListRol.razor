@page "/roles"
@using AirTiquiciaAPP.Shared
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime


    <AuthorizeView>
        <Authorized>

            <h1>Rol</h1>

            <p>Lista de roles ofrecidos por AirTiquicia</p>

            @if (roles == null)
            {
                <p><em>Loading...</em></p>
            }
            else if (!roles.Any())
            {
                <p><em>No existen Registros</em></p>
            }
            else
            {
                <button class="btn btn-primary" id="btn-crear" @onclick="(()=>ObtenerRol(0))">
                    <span class="icon fa-solid fa-plus-square"></span>
                    Crear Rol
                </button>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Rol</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var rol in roles)
                        {
                            <tr>
                                <td>@rol.Nombre</td>
                                <td>
                                    <button class="btn btn-outline-secondary" @onclick="(()=>ObtenerRol(rol.IdRol))">
                                        <span class="icon fa-solid fa-pencil" title="pencil" aria-hidden="true"></span>
                                        Editar
                                    </button>
                                    <button class="btn btn-outline-danger" role="button" @onclick="(()=>Delete_Click(rol))">
                                        <span class="icon fa-solid fa-trash" title="trash" aria-hidden="true"></span>
                                        Eliminar
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </Authorized>
        <NotAuthorized>
            <div class="alert alert-warning col-12" role="alert">
                No Autorizado por favor inicie sesión
            </div>
        </NotAuthorized>
    </AuthorizeView>


    @code {
        private List<Rol> roles = new List<Rol>();

        protected override async Task OnInitializedAsync()
        {
            await LlenarTabla();


        }

        private async Task LlenarTabla()
        {
            try
            {
                roles = await Http.GetFromJsonAsync<List<Rol>>("Rol");
            }
            catch (Exception ex)
            {
                roles = new List<Rol>();

            }
        }


        private void ObtenerRol(int idRol)
        {
            if (idRol == 0)
            {
                navigationManager.NavigateTo($"editRol/");
            }
            else
            {
                navigationManager.NavigateTo($"editRol/{idRol}");
            }


        }

        protected async void Delete_Click(Rol rol)
        {
            try
            {
                if (!await JSRuntime.InvokeAsync<bool>("confirm", $"¿Esta seguro que desea eliminar el rol '{rol.Nombre}'?"))
                    return;

                var respon = await Http.DeleteAsync($"Rol/{rol.IdRol}");

                if (respon.IsSuccessStatusCode)
                {
                    await LlenarTabla();
                    StateHasChanged();
                }
            }
            catch (Exception ex)
            {

                throw;
            }


        }




    }
