@page "/editTipoAvion/{id:int}"
@page "/editTipoAvion"
@using AirTiquiciaAPP.Shared
@inject HttpClient Http
@inject NavigationManager navigationManager

@if (tipoAvion == null)
{
<span>Cargando TipoAvion...</span>
}
else
{
<h3>Mantenimiento de tipo de persona</h3>
<EditForm Model="tipoAvion" OnValidSubmit="CreaOActualizaTipoAvion">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group row">
        <label for="Descripcion" class="col-sm-1 col-form-label">Descripci&oacute;n</label>
        <div class="col-sm-4">
            <InputText @bind-Value="tipoAvion.Descripcion" class="form-control"></InputText>
        </div>
    </div>
    <div class="form-group row">
        <label for="FilaString" class="col-sm-1 col-form-label">Fila</label>
        <div class="col-sm-4">
            <InputText @bind-Value="tipoAvion.FilaString" class="form-control"></InputText>
        </div>
    </div>
    <div class="form-group row">
        <label for="AsientoString" class="col-sm-1 col-form-label">Asiento</label>
        <div class="col-sm-4">
            <InputText @bind-Value="tipoAvion.AsientoString" class="form-control"></InputText>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">
        @if (tipoAvion.IdTipoAvion == 0)
        {
            <span class="icon fa-solid fa-plus-square"></span>
            @MensajeBoton;
        }
        else
        {
            <span class="icon fa-solid fa-pencil"></span>
            @MensajeBoton;
        }


    </button>
</EditForm>
}



@code {

    [Parameter]
    public int id { get; set; }

    TipoAvion tipoAvion = new TipoAvion();
    private List<TipoAvion> tipoAvions = new List<TipoAvion>();
    private List<Persona> listPersona = new List<Persona>();
    private string MensajeBoton = " Crear Tipo Avion" ;

    protected override async Task OnInitializedAsync()
    {

        if (id != 0)
        {
            tipoAvions = await Http.GetFromJsonAsync<List<TipoAvion>>($"TipoAvion/{id}");
            tipoAvion = tipoAvions.FirstOrDefault();
            tipoAvion.FilaString = tipoAvion.Fila.ToString();
            tipoAvion.AsientoString = tipoAvion.Asiento.ToString();
            MensajeBoton = " Editar Tipo Avion";
        }

        //selected element
        listPersona = await Http.GetFromJsonAsync<List<Persona>>("Persona");

    }

    private async void CreaOActualizaTipoAvion()
    {
        HttpResponseMessage response;
        tipoAvion.Asiento = Convert.ToInt16(tipoAvion.AsientoString =string.IsNullOrEmpty(tipoAvion.AsientoString)?"0": tipoAvion.AsientoString);
        tipoAvion.Fila = Convert.ToInt16(tipoAvion.FilaString = string.IsNullOrEmpty(tipoAvion.FilaString) ? "0" : tipoAvion.FilaString);
        if (tipoAvion.IdTipoAvion == 0)
        {
            response = await Http.PostAsJsonAsync<TipoAvion>("TipoAvion", tipoAvion);

            if (response.IsSuccessStatusCode)
            {

                navigationManager.NavigateTo($"tipoAviones");
            }
        }
        else
        {
            response = await Http.PutAsJsonAsync<TipoAvion>("TipoAvion", tipoAvion);
            if (response.IsSuccessStatusCode)
            {
                navigationManager.NavigateTo($"tipoAviones");
            }
        }
    }
}
