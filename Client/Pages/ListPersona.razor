@page "/personas"
@using AirTiquiciaAPP.Shared
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime

    <AuthorizeView>
        <Authorized>
            <h3>Persona</h3>
            <p>Lista de personas</p>


            @if (listPersona == null)
            {
                <p><em>Loading...</em></p>
            }
            else 
            {
                <button class="btn btn-primary" id="btn-crear" @onclick="(() => ObtenerPersona(0))">
                    <span class="icon fa-solid fa-plus-square"></span>
                    Crear Persona
                </button>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Apellido</th>
                            <th>Tel&eacute;fono</th>
                            <th>Direcci&oacute;n</th>
                            <th>Correo</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (!listPersona.Any())
                        {
                            <p><em>No existen Registros</em></p>
                        }
                        else
                        {
                            @foreach (var persona in listPersona)
                            {
                                <tr>
                                    <td>@persona.Nombre</td>
                                    <td>@persona.Apellidos</td>
                                    <td>@persona.Telefono</td>
                                    <td>@persona.Direccion</td>
                                    <td>@persona.Correo</td>
                                    <td>
                                        <button class="btn btn-outline-secondary" @onclick="(() => ObtenerPersona(persona.IdPersona))">
                                            <span class="icon fa-solid fa-pencil" title="pencil" aria-hidden="true"></span>
                                            Editar
                                        </button>
                                        <button class="btn btn-outline-danger" role="button" @onclick="(() => Delete_Click(persona))">
                                            <span class="icon fa-solid fa-trash" title="trash" aria-hidden="true"></span>
                                            Eliminar
                                        </button>
                                    </td>
                                </tr>
                            }
                        }

                    </tbody>
                </table>
            }
        </Authorized>
        <NotAuthorized>
            <div class="alert alert-warning col-12" role="alert">
                No Autorizado por favor inicie sesión
            </div>
        </NotAuthorized>
    </AuthorizeView>

    
    @code {

        private List<Persona> listPersona = new List<Persona>();

        protected override async Task OnInitializedAsync()
        {
            await LlenarTabla();

        }

        private async Task LlenarTabla()
        {
            try
            {
                listPersona = await Http.GetFromJsonAsync<List<Persona>>("Persona");
            }
            catch (Exception ex)
            {

                listPersona = new List<Persona>();
            }
        }


        private void ObtenerPersona(int idPersona)
        {
            if (idPersona == 0)
            {
                navigationManager.NavigateTo($"editPersona/");
            }
            else
            {
                navigationManager.NavigateTo($"editPersona/{idPersona}");
            }


        }

        protected async void Delete_Click(Persona persona)
        {
            try
            {
                if (!await JSRuntime.InvokeAsync<bool>("confirm", $"¿Esta seguro que desea eliminar el tripulante '{persona.Nombre}'?"))
                    return;

                var respon = await Http.DeleteAsync($"Persona/{persona.IdPersona}");

                if (respon.IsSuccessStatusCode)
                {
                    await LlenarTabla();
                    StateHasChanged();
                }
            }
            catch (Exception ex)
            {

                throw;
            }


        }

    }
